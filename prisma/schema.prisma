// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  user_id            Int       @id @default(autoincrement())
  account_id         String?   @unique
  name               String
  phone              String    @unique
  email              String    @unique
  password           String
  About              String?
  Portfolio          String?
  attach_photo       String?   @default("default.png")
  Street_Address     String?
  City               String?
  State              String?
  Postal_Code        Int?
  Country            String?
  Position_Last_Held String?
  company            String?
  Start_date         DateTime  @default(now())
  End_date           DateTime?
  contract_id        String[]
  role               Role
  projects           Project[]
}

model Project {
  project_id           Int         @id @unique @default(autoincrement())
  project_code         String      @unique
  title                String
  project_scope        String
  project_decriptions  String
  requirements         String?     @db.VarChar(1000)
  terms_and_conditions String?     @db.VarChar(1000)
  total_fund           Float
  duration             DateTime
  deliverables         String
  category             String
  project_contract_id  String?
  penalty              Float
  fund_transfer_type   String
  milestones           Milestone[]
  user                 User        @relation(fields: [user_id], references: [user_id]) // Add this relation field
  user_id              Int
  Provider             Provider[]
}

model Milestone {
  milestone_id          Int      @id @default(autoincrement())
  milestone_code        String   @unique
  description           String
  requirements          String
  funds_allocated       Float
  start_date            DateTime @default(now())
  acceptance_criteria   String
  completion_date       DateTime
  status                Status   @default(Inprogress)
  no_of_revision        Int
  penalty               Float
  description_file_hash String?
  description_file_link String?
  approved              Boolean  @default(false)
  closed                Boolean  @default(false)
  resolve_time          Int?
  revision_counter      Int      @default(0)

  project    Project @relation(fields: [project_id], references: [project_id]) // Add this relation field
  project_id Int
}

model Provider {
  id          Int     @id @default(autoincrement())
  provider_id String  @unique
  name        String
  skill       String
  project     Project @relation(fields: [project_id], references: [project_id]) // Add this relation field
  project_id  Int
}

enum Role {
  PURCHASER
  PROVIDER
}

enum Status {
  Inprogress
  Inreview
  Completed
  Rework
  Forceclosed
}
